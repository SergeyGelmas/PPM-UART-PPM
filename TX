#define PPM_INPUT_PIN PA0
#define NUM_CHANNELS 8
#define SYNC_PULSE_WIDTH 3000 // мкс

uint16_t ppmValues[NUM_CHANNELS];
uint8_t currentChannel = 0;
uint32_t lastRise = 0;

void setup() {
  Serial1.begin(115200);
  pinMode(PPM_INPUT_PIN, INPUT);
  attachInterrupt(digitalPinToInterrupt(PPM_INPUT_PIN), ppmISR, RISING);
}

void ppmISR() {
  uint32_t now = micros();
  uint32_t duration = now - lastRise;
  lastRise = now;

  if (duration > SYNC_PULSE_WIDTH) {
    currentChannel = 0; // новая рамка
  } else if (currentChannel < NUM_CHANNELS) {
    ppmValues[currentChannel++] = constrain(duration, 1000, 2000);
  }
}

void loop() {
  static uint32_t lastSend = 0;
  if (millis() - lastSend > 20) {
    lastSend = millis();

    Serial1.write(0xFF);
    Serial1.write(0xFE);

    uint8_t checksum = 0;
    for (uint8_t i = 0; i < NUM_CHANNELS; i++) {
      uint8_t lo = ppmValues[i] & 0xFF;
      uint8_t hi = (ppmValues[i] >> 8) & 0xFF;
      Serial1.write(lo);
      Serial1.write(hi);
      checksum ^= lo ^ hi;
    }

    Serial1.write(checksum);
  }
}
